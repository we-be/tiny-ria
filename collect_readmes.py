#!/usr/bin/env python3
"""
Script to recursively collect all README.md files and concatenate them into context.txt
for use with planning agents.
"""

import os
import sys
from pathlib import Path

def collect_readmes(root_dir):
    """Recursively collect all README.md files from the given directory and subdirectories."""
    readme_files = []
    
    for dirpath, dirnames, filenames in os.walk(root_dir):
        for filename in filenames:
            if filename.lower() == 'readme.md':
                full_path = os.path.join(dirpath, filename)
                readme_files.append(full_path)
    
    return sorted(readme_files)

def create_context_file(readme_files, output_file):
    """Create a context file by concatenating all README.md files with proper headers."""
    with open(output_file, 'w') as outfile:
        outfile.write("# Project Documentation Context\n\n")
        outfile.write("This file is automatically generated from all README.md files in the project.\n")
        outfile.write("It is intended to be used for AI planning agents to understand the project structure.\n\n")
        
        for readme_path in readme_files:
            rel_path = os.path.relpath(readme_path, os.path.dirname(output_file))
            
            # Add a horizontal line and header with file path
            outfile.write("\n\n" + "-" * 80 + "\n\n")
            outfile.write(f"## {rel_path}\n\n")
            
            # Read and append the README content
            try:
                with open(readme_path, 'r') as infile:
                    content = infile.read()
                    outfile.write(content)
            except Exception as e:
                outfile.write(f"[Error reading file: {str(e)}]\n")

def main():
    # Get the root directory (should be the project root)
    root_dir = os.path.dirname(os.path.abspath(__file__))
    output_file = os.path.join(root_dir, "context.txt")
    
    print(f"Collecting README.md files from {root_dir}...")
    readme_files = collect_readmes(root_dir)
    
    print(f"Found {len(readme_files)} README.md files.")
    create_context_file(readme_files, output_file)
    
    print(f"Context file created at: {output_file}")
    print(f"Total size: {os.path.getsize(output_file) / 1024:.2f} KB")

if __name__ == "__main__":
    main()